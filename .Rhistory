install.packages("oce")
install.packages("Rgl")
install.packages("rgl")
install.packages("vegan")
install.packages("ade4")
install.packages("cobs")
install.packages("chron")
install.packages("quantreg")
install.packages("shiny")
shiny::runGitHub("shiny-phyloseq","joey711")
shiny::runGitHub("shiny-phyloseq","joey711")
View(install_missing_packages)
View(install_missing_packages)
View(install_missing_packages)
gas_solubility(t = 1:20,S = 35, species = "CO2")
gas_solubility(t = 0:5,S = 35,species = "O2")
Temp <- seq(from = 0, to = 30, by = 0.1)
mf <- par(mfrow = c(1, 2))
gs  <- gas_solubility(t = Temp)
species   <- c("CCl4", "CO2", "N2O", "Rn", "CCl2F2")
matplot(Temp, gs[, species], type = "l", lty = 1, lwd = 2,
xlab = "temperature", ylab = "mmol/m3", main = "solubility (S=35)")
legend("topright", col = 1:5, lwd = 2, legend = species)
species2 <- c("Kr", "CH4", "Ar", "O2", "N2", "Ne")
matplot(Temp, gs[, species2], type = "l", lty = 1, lwd = 2,
xlab = "temperature", ylab = "mmol/m3", main = "solubility (S=35)")
legend("topright", col = 1:6, lwd = 2, legend = species2)
plot(Temp,gas_solubility(t = Temp, species = "CCl4"), xlab = "temperature",
ylab = "mmol/m3/atm", main = "solubility (S=35)",
type = "l", lwd = 2, ylim = c(0, 100000))
lines(Temp,gas_solubility(t = Temp, species = "CO2"), col = "red", lwd = 2)
lines(Temp,gas_solubility(t = Temp, species = "N2O"), col = "blue", lwd = 2)
lines(Temp,gas_solubility(t = Temp, species = "Rn"), col = "green", lwd = 2)
lines(Temp,gas_solubility(t = Temp, species = "CCl2F2"), col = "yellow", lwd = 2)
library("marelac", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
gas_solubility(t = 1:20,S = 35, species = "CO2")
gas_solubility(t = 0:5,S = 35,species = "O2")
Temp <- seq(from = 0, to = 30, by = 0.1)
mf <- par(mfrow = c(1, 2))
gs  <- gas_solubility(t = Temp)
species   <- c("CCl4", "CO2", "N2O", "Rn", "CCl2F2")
matplot(Temp, gs[, species], type = "l", lty = 1, lwd = 2,
xlab = "temperature", ylab = "mmol/m3", main = "solubility (S=35)")
legend("topright", col = 1:5, lwd = 2, legend = species)
species2 <- c("Kr", "CH4", "Ar", "O2", "N2", "Ne")
matplot(Temp, gs[, species2], type = "l", lty = 1, lwd = 2,
xlab = "temperature", ylab = "mmol/m3", main = "solubility (S=35)")
legend("topright", col = 1:6, lwd = 2, legend = species2)
plot(Temp,gas_solubility(t = Temp, species = "CCl4"), xlab = "temperature",
ylab = "mmol/m3/atm", main = "solubility (S=35)",
type = "l", lwd = 2, ylim = c(0, 100000))
lines(Temp,gas_solubility(t = Temp, species = "CO2"), col = "red", lwd = 2)
lines(Temp,gas_solubility(t = Temp, species = "N2O"), col = "blue", lwd = 2)
lines(Temp,gas_solubility(t = Temp, species = "Rn"), col = "green", lwd = 2)
lines(Temp,gas_solubility(t = Temp, species = "CCl2F2"), col = "yellow", lwd = 2)
install.packages("OceanView")
require(OceanView)
require(shape)
cols <- ramp.col(c( "lightblue1", "grey10"), n = 100)
par(mar = c(0, 0, 0, 1))
image2D(Hypsometry, col = cols, shade = 0.1, rasterImage = TRUE,
contour = list(levels = 0, draw = F), axes = FALSE, xlab = "", ylab = "",
colkey = list(width = 0.5, length = 0.5, cex.axis = 0.7))
require(OceanView)
require(shape)
cols <- ramp.col(c( "lightblue1", "grey10"), n = 100)
par(mar = c(0, 0, 0, 1))
image2D(Hypsometry, col = cols, shade = 0.1, rasterImage = TRUE,
contour = list(levels = 0, draw = F), axes = FALSE, xlab = "", ylab = "",
colkey = list(width = 0.5, length = 0.5, cex.axis = 0.7))
install.packages("ode")
install.packages("deSolve")
co2=o2_unit_conv(x[,8], from = "percent_a.s.", to = "umol_per_l", S, x[,7],p)
shiny::runApp('OSU/Growth_APP')
runApp('OSU/Growth_APP')
runApp('OSU/Growth_APP')
runApp('OSU/Growth_APP')
source("https://bioconductor.org/biocLite.R")
biocLite("cytofkit")
library("cytofkit")
cytofkit()
cytofkit_GUI()
cytofkit_GUI()
library("cytofkit")
## simple contour plot
contour(GvHD[[1]])
## overlay with existing plot
plot(GvHD[[1]], c("FSC-H", "SSC-H"))
contour(GvHD[[1]], add=TRUE, col="lightgray", lty=3)
## colored contours
contour(GvHD[[1]], fill="red")
cols <- rainbow(3, alpha=0.1)
contour(GvHD[[1]], fill=cols, col=cols)
## overlay of multiple flowFrames in a flowSet
contour(GvHD[1:3], col=cols, fill=cols)
library("flowViz", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
## simple contour plot
contour(GvHD[[1]])
## overlay with existing plot
plot(GvHD[[1]], c("FSC-H", "SSC-H"))
contour(GvHD[[1]], add=TRUE, col="lightgray", lty=3)
## colored contours
contour(GvHD[[1]], fill="red")
cols <- rainbow(3, alpha=0.1)
contour(GvHD[[1]], fill=cols, col=cols)
## overlay of multiple flowFrames in a flowSet
contour(GvHD[1:3], col=cols, fill=cols)
data(GvHD)
GvHD <- GvHD[pData(GvHD)$Patient %in% 6:7]
densityplot(~ `FSC-H`, GvHD)
densityplot(~ `FSC-H` + `SSC-H`, GvHD)
densityplot(~ ., GvHD[1:3])
library("lattice")
library("lattice")
library("lattice", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
## Tonga Trench Earthquakes
Depth <- equal.count(quakes$depth, number=8, overlap=.1)
xyplot(lat ~ long | Depth, data = quakes)
update(trellis.last.object(),
strip = strip.custom(strip.names = TRUE, strip.levels = TRUE),
par.strip.text = list(cex = 0.75),
aspect = "iso")
R
version(Ã )
version()
runApp('OSU/Growth_APP')
shiny::runApp('OSU/Growth_APP')
b1 = installed.packages()[, 1]
write.talbe(b1, "all_my_packages.txt")
getwd()
write.table(b1, "all_my_packages.txt")
shiny::runApp('GitHub/logistic_microbio')
runApp('GitHub/logistic_microbio')
runApp('OSU/Growth_APP')
runApp('GitHub/logistic_microbio')
runApp('GitHub/logistic_microbio')
runApp('OSU/Growth_APP')
runApp('GitHub/logistic_microbio')
runApp('GitHub/logistic_microbio')
runApp('GitHub/logistic_microbio')
ll
library("cytofkit", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("XQuartz")
library("cytofkit", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("VGAM", dependencies = FALSE)
library("cytofkit", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("~/Downloads/VGAM_1.0-3.tar.gz", repos = NULL, type = "source")
library("vegan", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
S <- specnumber(BCI) # observed number of species
(raremax <- min(rowSums(BCI)))
Srare <- rarefy(BCI, raremax)
plot(S, Srare, xlab = "Observed No. of Species", ylab = "Rarefied No. of Species")
abline(0, 1)
rarecurve(BCI, step = 20, sample = raremax, col = "blue", cex = 0.6)
data(BCI)
S <- specnumber(BCI) # observed number of species
(raremax <- min(rowSums(BCI)))
Srare <- rarefy(BCI, raremax)
plot(S, Srare, xlab = "Observed No. of Species", ylab = "Rarefied No. of Species")
abline(0, 1)
rarecurve(BCI, step = 20, sample = raremax, col = "blue", cex = 0.6)
View(BCI)
data(BCI)
S <- specnumber(BCI) # observed number of species
(raremax <- min(rowSums(BCI)))
Srare <- rarefy(BCI, raremax)
plot(S, Srare, xlab = "Observed No. of Species", ylab = "Rarefied No. of Species")
abline(0, 1)
rarecurve(BCI, step = 20, sample = raremax, col = "blue", cex = 0.6)
data(BCI)
S <- specnumber(BCI) # observed number of species
(raremax <- min(rowSums(BCI)))
Srare <- rarefy(BCI, raremax)
plot(S, Srare, xlab = "Observed No. of Species", ylab = "Rarefied No. of Species")
abline(0, 1)
rarecurve(BCI, step = 20, sample = raremax, col = "blue", cex = 0.6)
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
data(BCI)
S <- specnumber(BCI) # observed number of species
(raremax <- min(rowSums(BCI)))
Srare <- rarefy(BCI, raremax)
plot(S, Srare, xlab = "Observed No. of Species", ylab = "Rarefied No. of Species")
abline(0, 1)
rarecurve(BCI, step = 20, sample = raremax, col = "blue", cex = 0.6)
data(BCI)
S <- specnumber(BCI) # observed number of species
(raremax <- min(rowSums(BCI)))
Srare <- rarefy(BCI, raremax)
plot(S, Srare, xlab = "Observed No. of Species", ylab = "Rarefied No. of Species")
abline(0, 1)
rarecurve(BCI, step = 20, sample = raremax, col = "blue", cex = 0.6)
help("plot")
?? plot
library("phyloseq", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
data("GlobalPatterns")
gp.ch = subset_taxa(GlobalPatterns, Phylum == "Chlamydiae")
plot_bar(gp.ch)
shiny::runApp('CNRS/BD_test/bd_test')
shiny::runApp('CNRS/BD_test/bd_test')
setwd("~/GitHub/logistic_microbio")
shiny::runApp()
